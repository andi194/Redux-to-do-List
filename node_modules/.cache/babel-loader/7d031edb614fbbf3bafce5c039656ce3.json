{"ast":null,"code":"import { VisibilityFilters, SET_VISIBILITY_FILTER, ADD_ITEM, REMOVE_ITEM, TOGGLE_ITEM } from './actions';\nimport { combineReducers } from 'redux';\n\nfunction visibilityFilterReducer(state = VisibilityFilters.SHOW_ALL, action) {\n  switch (action.type) {\n    case SET_VISIBILITY_FILTER:\n      return action.filter;\n\n    default:\n      return state;\n  }\n}\n\nfunction itemReducer(state = [], action) {\n  switch (action.type) {\n    case ADD_ITEM:\n      return [...state, {\n        id: action.id,\n        description: action.text,\n        completed: false\n      }];\n\n    case REMOVE_ITEM:\n      return state.filter((_, id) => action.id !== id);\n\n    case TOGGLE_ITEM:\n      return state.map(item => {\n        if (item.id === action.id) {\n          return Object.assign({}, item, {\n            completed: !item.completed\n          });\n        }\n\n        return item;\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport const rootReducer = combineReducers({\n  visibilityFilter: visibilityFilterReducer,\n  items: itemReducer\n});","map":{"version":3,"sources":["C:/Users/Andrea/Documents/GitHub/Redux-to-do-List/src/reducer.js"],"names":["VisibilityFilters","SET_VISIBILITY_FILTER","ADD_ITEM","REMOVE_ITEM","TOGGLE_ITEM","combineReducers","visibilityFilterReducer","state","SHOW_ALL","action","type","filter","itemReducer","id","description","text","completed","_","map","item","Object","assign","rootReducer","visibilityFilter","items"],"mappings":"AAAA,SACIA,iBADJ,EAEIC,qBAFJ,EAGIC,QAHJ,EAIIC,WAJJ,EAKIC,WALJ,QAMS,WANT;AAQE,SAASC,eAAT,QAAgC,OAAhC;;AAEA,SAASC,uBAAT,CAAiCC,KAAK,GAAGP,iBAAiB,CAACQ,QAA3D,EAAqEC,MAArE,EAA6E;AAC3E,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,qBAAL;AACE,aAAOQ,MAAM,CAACE,MAAd;;AACF;AACE,aAAOJ,KAAP;AAJJ;AAMD;;AAED,SAASK,WAAT,CAAqBL,KAAK,GAAG,EAA7B,EAAiCE,MAAjC,EAAyC;AACvC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,QAAL;AACE,aAAO,CACL,GAAGK,KADE,EAEL;AACEM,QAAAA,EAAE,EAAEJ,MAAM,CAACI,EADb;AAEEC,QAAAA,WAAW,EAAEL,MAAM,CAACM,IAFtB;AAGEC,QAAAA,SAAS,EAAE;AAHb,OAFK,CAAP;;AAQF,SAAKb,WAAL;AACE,aAAOI,KAAK,CAACI,MAAN,CAAa,CAACM,CAAD,EAAIJ,EAAJ,KAAWJ,MAAM,CAACI,EAAP,KAAcA,EAAtC,CAAP;;AACF,SAAKT,WAAL;AACE,aAAOG,KAAK,CAACW,GAAN,CAAWC,IAAD,IAAU;AACzB,YAAIA,IAAI,CAACN,EAAL,KAAYJ,MAAM,CAACI,EAAvB,EAA2B;AACzB,iBAAOO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,IAAlB,EAAwB;AAC7BH,YAAAA,SAAS,EAAE,CAACG,IAAI,CAACH;AADY,WAAxB,CAAP;AAGD;;AACD,eAAOG,IAAP;AACD,OAPM,CAAP;;AAQF;AACE,aAAOZ,KAAP;AAtBJ;AAwBD;;AAED,OAAO,MAAMe,WAAW,GAAGjB,eAAe,CAAC;AACzCkB,EAAAA,gBAAgB,EAAEjB,uBADuB;AAEzCkB,EAAAA,KAAK,EAAEZ;AAFkC,CAAD,CAAnC","sourcesContent":["import {\r\n    VisibilityFilters, \r\n    SET_VISIBILITY_FILTER, \r\n    ADD_ITEM, \r\n    REMOVE_ITEM, \r\n    TOGGLE_ITEM\r\n  } from './actions'\r\n  \r\n  import { combineReducers } from 'redux'\r\n  \r\n  function visibilityFilterReducer(state = VisibilityFilters.SHOW_ALL, action) {\r\n    switch (action.type) {\r\n      case SET_VISIBILITY_FILTER:\r\n        return action.filter\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  function itemReducer(state = [], action) {\r\n    switch (action.type) {\r\n      case ADD_ITEM:\r\n        return [\r\n          ...state,\r\n          {\r\n            id: action.id,\r\n            description: action.text,\r\n            completed: false\r\n          }\r\n        ]\r\n      case REMOVE_ITEM:\r\n        return state.filter((_, id) => action.id !== id)\r\n      case TOGGLE_ITEM:\r\n        return state.map((item) => {\r\n          if (item.id === action.id) {\r\n            return Object.assign({}, item, {\r\n              completed: !item.completed\r\n            })\r\n          }\r\n          return item\r\n        })\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export const rootReducer = combineReducers({\r\n    visibilityFilter: visibilityFilterReducer,\r\n    items: itemReducer,\r\n  })"]},"metadata":{},"sourceType":"module"}